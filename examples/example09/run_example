#!/bin/sh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to use thermo_pw.x to calculate the "
$ECHO "the lattice constant and the bulk modulus of silicon as a function"
$ECHO "of the temperature."

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="thermo_pw.x plotband.x"
PSEUDO_LIST="Si.pz-vbc.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"


# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done

for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE $NETWORK_PSEUDO/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
THERMO_PW_COMMAND="$PARA_IMAGE_PREFIX $BIN_DIR/thermo_pw.x $PARA_IMAGE_POSTFIX"
PLOTBAND_COMMAND="$BIN_DIR/plotband.x"
# check for gnuplot
GP_COMMAND=`which gnuplot 2>/dev/null`
$ECHO
$ECHO "  running thermo_pw.x as: $THERMO_PW_COMMAND"
$ECHO "  running plotband.x as: $PLOTBAND_COMMAND"
$ECHO "  running gnuplot as: $GP_COMMAND"
$ECHO

$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

cat > si.mur_lc_t.in << EOF
 &INPUT_THERMO
  what='mur_lc_t',
  flfrc='sifc.222.dat'
  flfrq='si.freq'
  fldos='si.phdos'
  fltherm='si.therm' 
  flanhar='si.anharm.dat'
  q_in_band_form=.true.,
  zasr='simple'
  nq1_d=16, nq2_d=16, nq3_d=16,
  ngeo=9,
  tmin=1.,
  tmax=800.,
  deltat=2.,
 /
 6
  0.000 0.0 0.0   40
  1.0   0.0 0.0   20
  1.0   0.5 0.0   20
  1.0   1.0 0.0   40
  0.00  0.0 0.0   40
  0.5   0.5 0.5    1
 &control
    calculation = 'scf'
    restart_mode='from_scratch',
    prefix='silicon',
    tstress = .true.
    tprnfor = .true.
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =10.20, nat=  2, ntyp= 1,
    ecutwfc =24.0,
 /
 &electrons
    mixing_mode = 'plain'
    mixing_beta = 0.7
    conv_thr =  1.0d-8
 /
ATOMIC_SPECIES
 Si  28.086  Si.pz-vbc.UPF
ATOMIC_POSITIONS
 Si 0.00 0.00 0.00
 Si 0.25 0.25 0.25
K_POINTS AUTOMATIC
4 4 4 1 1 1 
---
ciao
 &inputph
  tr2_ph=1.0d-12,
  prefix='silicon',
  fildyn='si.dyn',
  ldisp=.TRUE.
  fildyn='si.dyn',
  nq1=4, nq2=4, nq3=4,
/
EOF
$ECHO "  running the thermo mur_lc_t calculation for Si...\c"
$THERMO_PW_COMMAND < si.mur_lc_t.in > si.mur_lc_t.out
check_failure $?
$ECHO " done"

cat > plotband.in <<EOF
si.freq.g1
0 600
freq.plot
freq.ps
0.0
50.0 0.0
EOF

$ECHO "  writing the phonon dispersions in freq.plot...\c"
$PLOTBAND_COMMAND < plotband.in > /dev/null
check_failure $?
$ECHO " done"

if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > gnuplot.tmp <<EOF
set encoding iso_8859_15
set terminal postscript enhanced solid color "Helvetica" 20
set output "si.dispersions.ps"
#
set key off

set xrange [0:4.280239]
dim=600
set yrange [0:dim]
set arrow from 1,0. to 1,dim nohead  lw 2
set arrow from 2,0. to 2,dim nohead  lw 2
set arrow from 1.5,0. to 1.5,dim nohead  lw 2
set arrow from 3.4142,0. to 3.4142,dim nohead  lw 2
set ylabel "frequency (cm^{-1})"
unset xtics
lpos=-15
set label "{/Symbol G}" at -0.05,lpos
set label "X" at 0.95,lpos
set label "W" at 1.45,lpos
set label "X" at 1.95,lpos
set label "{/Symbol G}" at 3.37,lpos
set label "L" at 4.1897,lpos

plot "freq.plot" u 1:2 w l lw 3  
EOF
$ECHO "  creating the postscript file si.dispersion.ps...\c"
$GP_COMMAND gnuplot.tmp
check_failure $?
$ECHO " done"
fi

if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > gnuplot1.tmp <<EOF
set encoding iso_8859_15
set terminal postscript enhanced solid color "Helvetica" 20
set output "si.phdos.ps"
#
set key off
set xrange [0:600]
set xlabel "frequency (cm^{-1})"
set ylabel "DOS"
plot 'si.phdos.g1' u 1:2 w l lw 3 
EOF
$ECHO "  generating plot of phonon_dos in the file si.phdos.ps...\c"
$GP_COMMAND  gnuplot1.tmp
check_failure $?
$ECHO " done"
fi

if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > gnuplot2.tmp <<EOF
set encoding iso_8859_15
set terminal postscript enhanced solid color "Helvetica" 20
set output "si.therm.ps"
#
set key off

set xrange [0:450]

dim0=8000
dim=22000
set yrange [dim0:dim]
set xlabel "T (K)"
set ylabel "Vibrational energy (J / mol)"

plot "si.therm.g1" u 1:(\$2*1313313) w l lw 3  

dim0=0
dim=12000
set yrange [dim0:dim]
set xlabel "T (K)"
set ylabel "Vibrational free energy (J / mol)"

plot "si.therm.g1" u 1:(\$3*1313313) w l lw 3  

dim=70
set yrange [0:dim]
set xlabel "T (K)"
set ylabel "Entropy (J / K / mol)"

plot "si.therm.g1" u 1:(\$4*1313313) w l lw 3  

dim=50
set yrange [0:dim]
set xlabel "T (K)"
set ylabel "C_v (J / T / mol)"

plot "si.therm.g1" u 1:(\$5*1313313) w l lw 3  

EOF
$ECHO "  creating the postscript file si.therm.ps...\c"
$GP_COMMAND gnuplot2.tmp
check_failure $?
$ECHO " done"
fi

cat > si.exp <<EOF
10   0.001
15   0.004
20  -0.006
90  -0.4
100 -0.35
130  0.
170  0.5
200  1.5
300  2.5
400  3.2
500  3.6
600  3.8
700  4.0
800  4.0
EOF

if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > gnuplot3.tmp <<EOF
set encoding iso_8859_15
set terminal postscript enhanced solid color "Helvetica" 20
set output "si.anharmonic.ps"
#
set key off

set xrange [0:850]

set xlabel "T (K)"
set ylabel "Lattice constant (a.u.)"

plot "si.anharm.dat" u 1:3 w l lw 3  

set xlabel "T (K)"
set ylabel "Thermal expansion ({/Symbol a} x 10^{-6})"

plot "si.anharm.dat" u 1:4 w l lw 3  
replot "si.exp" u 1:4 w p pt 65  

set xlabel "T (K)"
set ylabel "Bulk modulus (kbar)"

plot "si.anharm.dat" u 1:5 w l lw 3  
EOF

$ECHO "  creating the postscript file si.anharmonic.ps...\c"
$GP_COMMAND gnuplot3.tmp
check_failure $?
$ECHO " done"
fi


$ECHO
$ECHO "$EXAMPLE_DIR: done"

